//AutoGenerated:
import 'dart:async';

import 'package:church/factories.dart';
import 'package:church/src/screens/auth_screen.dart';
import 'package:church/src/screens/event_screen.dart';
import 'package:church/src/screens/location_screen.dart';
import 'package:church/src/screens/profile_screen.dart';
import 'package:church/src/screens/user_screen.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';

Route onRoute(RouteSettings settings) {
  final result = settings.name;
  switch (result) {
    case Routes.user:
      return MaterialPageRoute<dynamic>(
          builder: (context) =>
              StreamBuilder(builder: (context, snapshot) => UserScreen(factories: Factories(),)));
    case Routes.user:
      return MaterialPageRoute<dynamic>(
          builder: (context) => StreamBuilder(
              builder: (context, snapshot) => UserScreenToManyScreen()));
    case Routes.event:
      return MaterialPageRoute<dynamic>(
          builder: (context) =>
              StreamBuilder(builder: (context, snapshot) => EventScreen()));
    case Routes.event:
      return MaterialPageRoute<dynamic>(
          builder: (context) => StreamBuilder(
              builder: (context, snapshot) => EventScreenToManyScreen()));
    case Routes.location:
      return MaterialPageRoute<dynamic>(
          builder: (context) =>
              StreamBuilder(builder: (context, snapshot) => LocationScreen()));
    case Routes.location:
      return MaterialPageRoute<dynamic>(
          builder: (context) => StreamBuilder(
              builder: (context, snapshot) => LocationScreenToManyScreen()));
    case Routes.profile:
      return MaterialPageRoute<dynamic>(
          builder: (context) =>
              StreamBuilder(builder: (context, snapshot) => ProfileScreen()));
    case Routes.profile:
      return MaterialPageRoute<dynamic>(
          builder: (context) => StreamBuilder(
              builder: (context, snapshot) => ProfileScreenToManyScreen()));
    default:
      return MaterialPageRoute<dynamic>(
          builder: (context) => StreamBuilder(
              stream: FirebaseAuth.instance.onAuthStateChanged,
              builder: (context, snapshot) {
                if (snapshot?.data != null) {
                  return UserScreen(factories: Factories());
                }
                return AuthScreen();
              }));
  }
}

class Routes {
  static const String user = 'User';
  static const String users = 'Users';
  static const String event = 'Event';
  static const String events = 'Events';
  static const String location = 'Location';
  static const String locations = 'Locations';
  static const String profile = 'Profile';
  static const String profiles = 'Profiles';
  static const String fireuser = 'FireUser';
  static const String fireusers = 'FireUsers';
}
